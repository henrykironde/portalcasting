% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/process_casts.R
\name{process_model_output}
\alias{process_model_output}
\title{Process and Save Cast Output to Files}
\usage{
process_model_output(
  main = ".",
  model_fit = NULL,
  model_cast,
  model,
  dataset,
  species
)
}
\arguments{
\item{main}{\code{character} value of the name of the main component of the directory tree.}

\item{model_fit, model_cast}{Output from a model's fit and cast functions.}

\item{model}{Length-one \code{character} vector of model name.}

\item{dataset}{Length-one \code{character} vector of dataset name.}

\item{species}{Length-one\code{character} vector of species name.}
}
\value{
Relevant elements are saved to external files, and returned as a \code{list}.
}
\description{
Take the model fit and cast output, process them into savable objects, and save them to the output folders. The cast metadata file is updated accordingly to track the saved output. \cr
}
\details{
Four model-specific output components are saved and returned.
\itemize{
\item \code{"cast_metadata"}: saved out with \code{\link[yaml:write_yaml]{write_yaml}}.
\item \code{"cast_tab"}: saved using \code{\link{write_csv_arrow}}.
\item \code{"model_fit"}: saved out as a serialized \code{JSON} file via \code{\link[jsonlite:serializeJSON]{serializeJSON}} and \code{\link[jsonlite:read_json]{read_json}}, so quite flexible with respect to specific object structure.
\item \code{"model_cast"}: saved out as a serialized \code{JSON} file via \code{\link[jsonlite:serializeJSON]{serializeJSON}} and \code{\link[jsonlite:read_json]{read_json}}, so quite flexible with respect to specific object structure.
}
}
