% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/models_jags.R
\name{runjags models}
\alias{runjags models}
\alias{runjags_inits}
\alias{runjags_model}
\alias{runjags_monitors}
\alias{runjags_data}
\alias{fit_runjags}
\alias{forecast.runjags}
\alias{runjags_controls}
\title{Create and Run a runjags Portalcasting Model}
\usage{
runjags_inits(inits)

runjags_model(model)

runjags_monitors(monitors, metadata)

runjags_data(data_names, abundance, metadata, covariates)

fit_runjags(
  abundance,
  metadata,
  covariates,
  monitors,
  inits,
  model,
  data_names,
  control_runjags = runjags_controls()
)

\method{forecast}{runjags}(object, h, level, nsamples, seed = NULL, ...)

runjags_controls(
  nchains = 4,
  adapt = 10000,
  burnin = 10000,
  sample = 10000,
  thin = 10,
  modules = "glm",
  method = "interruptible",
  factories = "",
  mutate = NA,
  silent_jags = FALSE
)
}
\arguments{
\item{inits}{\code{list} of model parameter initializer functions. See \code{\link{prefab_models_controls}}.}

\item{model}{\code{character} value of the model file name. See \code{\link{prefab_models_controls}}.}

\item{monitors}{\code{character} vector of parameters to track. Forecasted observations and state variables are tracked automatically.}

\item{metadata}{\code{list} of model control elements. See \code{\link{prepare_metadata}}.}

\item{data_names}{\code{character} vector of data values to include in the data \code{list}. See \code{\link{prefab_models_controls}}.}

\item{abundance}{Non-negative \code{integer}-conformable vector of rodent abundances to use in forecasting. See \code{\link{prepare_abundance}}.}

\item{covariates}{\code{data.frame} of covariates used in modeling. See \code{\link{prepare_covariates}}.}

\item{control_runjags}{\code{list} of controls for running runjags models. See \code{\link{runjags_controls}}. Optional. If not provided here, will be taken from the model controls list.}

\item{object}{A \code{runjags}-class object with columns of \code{"X"} values (state variables) in the the \code{mcmc} element.}

\item{h}{\code{integer}-conformable number of steps forward to include in the forecast.}

\item{level}{\code{numeric} of the confidence level to use in summarizing the predictions.}

\item{nsamples}{\code{integer} (or integer \code{numeric}) number of samples used to summarizing model output of sample-based estimates.}

\item{seed}{A single \code{integer}-conformable value or \code{NULL} set in \code{\link{set.seed}}.}

\item{...}{Additional parameters}

\item{nchains}{Non-negative \code{integer}-conformable value of the number of parallel chains to use. See \code{\link[runjags:run.jags]{run.jags}}.}

\item{adapt}{Non-negative \code{integer}-conformable value of the number of adaptation steps to use. See \code{\link[runjags:run.jags]{run.jags}}.}

\item{burnin}{Non-negative \code{integer}-conformable value of the number of burnin steps to use. See \code{\link[runjags:run.jags]{run.jags}}.}

\item{sample}{Non-negative \code{integer}-conformable value of the number of sampling steps to use. See \code{\link[runjags:run.jags]{run.jags}}.}

\item{thin}{Positive \code{integer}-conformable value of the thinning interval to use. See \code{\link[runjags:run.jags]{run.jags}}.}

\item{modules}{\code{character} vector of external modules to add to JAGS. See \code{\link[runjags:run.jags]{run.jags}}.}

\item{method}{\code{character} value of the \code{\link[runjags:run.jags]{run.jags}} method to use. Options include \code{"rjags"}, \code{"simple"}, \code{"interruptible"}, \code{"parallel"}, \code{"rjparallel"}, \code{"background"}, \code{"bgparallel"}, and \code{"snow"}. See \code{\link[runjags:run.jags]{run.jags}}.}

\item{factories}{\code{character} vector of factory modules to add to JAGS. See \code{\link[runjags:run.jags]{run.jags}}.}

\item{mutate}{A \code{function} or \code{list} (with the first element being a \code{function}) used to add variables to the posterior chain (rather than throughout sampling). See \code{\link[runjags:run.jags]{run.jags}}.}

\item{silent_jags}{\code{logical} value for quieting the output from the runjags function, including the underlying JAGS output.}
}
\value{
\code{fit_runjags}: An object of class \code{"runjags"} of model components. See \code{\link[runjags:run.jags]{run.jags}}. \cr
\code{runjags_data}: A \code{list} of model-specific data for use in \code{\link[runjags:run.jags]{run.jags}}. \cr
\code{runjags_monitor}: A \code{vector} of model-specific \code{character} values of parameters to track in \code{\link[runjags:run.jags]{run.jags}}.  \cr
\code{runjags_model}: A single \code{character} value of the JAGS model block for \code{\link[runjags:run.jags]{run.jags}}.  \cr
\code{runjags_inits}: A \code{function} that takes the argument \code{data} to produce chain-specific initial values for \code{\link[runjags:run.jags]{run.jags}}. \cr
\code{runjags_controls}: A \code{list} of controls. \cr
\code{forecast.runjags}: \code{list} with \code{"forecast"}-class with named elements including \code{"mean"}, \code{"lower"}, \code{"upper"}, and \code{"level"}.
}
\description{
Using the runjags (Denwood 2016) package to produce JAGS-based forecasts. \cr
\code{fit_runjags}: Wraps up the runjags model object preparation functions with the model running (\code{\link[runjags:run.jags]{run.jags}} function in the runjags (Denwood 2016) package) we use to run JAGS (Plummer 2003) models in portalcasting. \cr
\code{runjags_data}, \code{runjags_monitor}, \code{runjags_model}, \code{runjags_inits}: Produce the model-specific components as named. \cr
\code{forecast.runjags}: A convenience function for extracting existing forecasts from runjags objects and summarizing them into a \code{"forecast"}-class object. \cr
\code{runjags_controls}: Combines the \code{\link[runjags:run.jags]{run.jags}} control parameters that users may be interested in changing with a few portalcasting-specific parameters into a control list for input into specific model functions.
}
\examples{
\dontrun{
   main1 <- file.path(tempdir(), "runjags")

   setup_dir(main = main1)
   dataset <- "all"
   species <- "DM"
   model   <- "runjags_RW"
 
   abundance      <- prepare_abundance(main    = main1,
                                       dataset = dataset,
                                       species = species,
                                       model   = model)
   model_controls <- models_controls(main       = main1,
                                     models     = model)[[model]]
   metadata       <- read_metadata(main        = main1)
   newmoons       <- read_newmoons(main        = main1)                                        
   covariates     <- read_covariates(main      = main1)
   control_runjags <- runjags_controls( )
   data_names      <- c("count", "N", "log_mean_count")

   runjags_model(model = model)

   runjags_monitors(monitors = c("mu", "sigma"),
                    metadata = metadata)

   data <- runjags_data(data_names = data_names,
                        abundance  = abundance,
                        metadata   = metadata,
                        covariates = covariates)

   runjags_inits(inits = list(mu    = rnorm(1, mean = data$log_mean_count, sd = 0.1),
                              sigma = runif(1, min  = 0.01, max = 0.5)))

   fit <- fit_runjags(abundance       = abundance, 
                      metadata        = metadata,
                      covariates      = covariates, 
                      monitors        = c("mu", "sigma"), 
                      inits           = list(mu    = rnorm(1, mean = data$log_mean_count, sd = 0.1),
                                             sigma = runif(1, min  = 0.01, max = 0.5)), 
                      model           = model,
                      data_names      = data_names,
                      control_runjags = control_runjags)
 
   forecast(object   = fit_runjags,  
            h        = metadata$lead_time_newmoons,   
            level    = metadata$confidence_level,   
            nsamples = metadata$nsamples)

   unlink(main1, recursive = TRUE)
}

}
\references{
Denwood, M. J. 2016. runjags: an R package providing interface utilities, model templates, parallel computing methods and additional distributions for MCMC models in JAGS. Journal of Statistical Software, 71:9. \href{https://www.jstatsoft.org/article/view/v071i09}{URL}.

Plummer, M. 2003. JAGS: A program for analysis of Bayesian graphical models using Gibbs Sampling. Proceedings of the 3rd International Workshop on Distributed Statistical Computing (DSC 2003). ISSN 1609-395X. \href{https://bit.ly/33aQ37Y}{URL}.
}
