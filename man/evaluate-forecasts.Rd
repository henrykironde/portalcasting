% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluate.R
\name{evaluate forecasts}
\alias{evaluate forecasts}
\alias{evaluate_forecasts}
\alias{evaluate_forecast}
\alias{read_forecasts_evaluations}
\title{Evaluate Forecasts}
\usage{
evaluate_forecasts(main = ".", forecast_ids = NULL)

evaluate_forecast(main = ".", forecast_id = NULL)

read_forecasts_evaluations(main = ".")
}
\arguments{
\item{main}{\code{character} value of the name of the main component of the directory tree.}

\item{forecast_id, forecast_ids}{\code{integer} (or integer \code{numeric}) value(s) representing the forecasts of interest for evaluating, as indexed within the \code{forecasts} subdirectory. See the forecasts metadata file (\code{forecasts_metadata.csv}) for summary information. \cr
\code{forecast_id} can only be a single value, whereas \code{forecast_ids} can be multiple.}
}
\value{
A \code{data.frame} of all forecast evaluations at the observation (newmoon) level, as requested, \code{\link[base:invisible]{invisible}}-ly.
}
\description{
Evaluate forecasts in the directory, based on id(s). \cr \cr
Current metrics include raw error (which can be used to calculate root mean squared error; RMSE), coverage, log score, and continuous rank probability score (CRPS). \cr
\code{read_forecasts_evaluations} read in the forecasts evaluations file.
}
\examples{
\dontrun{
   main1 <- file.path(tempdir(), "evaluations")
   setup_dir(main = main1)

   plot_covariates(main = main1)

   make_model_combinations(main = main1)

   portalcast(main   = main1, 
              models = "AutoArima")

   cast(main    = main1,
        model   = "AutoArima", 
        dataset = "controls", 
        species = "DM")

   evaluate_forecasts(main = main1)

   ids <- forecasts_to_evaluate <- select_forecasts(main         = main, 
                                                    forecast_ids = forecast_ids)
        
   evaluate_forecast(main        = main1, 
                     forecast_id = ids[1])

   read_forecast_evaluations(main = main1)

   unlink(main1, recursive = TRUE)
}

}
