# Generated by roxygen2: do not edit by hand

S3method(forecast,runjags)
S3method(forecast,tsglm)
export(NMME_urls)
export(about_tab)
export(add_forecast_newmoons)
export(add_new_dataset)
export(add_new_model)
export(add_obs_to_cast_tab)
export(available_datasets)
export(available_historic_end_newmoonnumbers)
export(available_models)
export(available_newmoonnumbers)
export(available_species)
export(break_line)
export(break_lines)
export(cast)
export(castle)
export(covariates_tab)
export(create_dir)
export(data_sources_section)
export(dataset_controls)
export(dataset_controls_template)
export(directory_files)
export(directory_resources)
export(directory_settings)
export(directory_subdirectories)
export(download_archive)
export(download_climate_forecasts)
export(ensemble_casts)
export(evaluate_cast)
export(evaluate_casts)
export(evaluation_tab)
export(evaluation_tab_input_selection_checks_row)
export(evaluation_tab_input_selection_row)
export(evaluation_tab_input_selection_row_dataset)
export(evaluation_tab_input_selection_row_historic_end_newmoonnumber)
export(evaluation_tab_input_selection_row_model)
export(evaluation_tab_input_selection_row_newmoonnumber)
export(evaluation_tab_input_selection_row_species)
export(event_reaction)
export(file_ext)
export(fill_app)
export(fill_data)
export(fill_dir)
export(fill_fits)
export(fill_forecasts)
export(fill_models)
export(fill_resources)
export(fit_runjags)
export(forecast_tab)
export(forecast_tab_input_selection_checks_row)
export(forecast_tab_input_selection_row)
export(forecast_tab_input_selection_row_dataset)
export(forecast_tab_input_selection_row_historic_end_newmoonnumber)
export(forecast_tab_input_selection_row_model)
export(forecast_tab_input_selection_row_species)
export(foy)
export(global_list)
export(ifnull)
export(initial_output)
export(initial_reactive_values)
export(make_model_combinations)
export(messageq)
export(meta_tsglm)
export(model_controls)
export(model_controls_template)
export(models_tab)
export(named_null_list)
export(new_dataset_args)
export(new_dataset_controls)
export(new_dataset_fun)
export(new_dataset_metadata)
export(new_model_cast)
export(new_model_controls)
export(new_model_datasets)
export(new_model_fit)
export(new_model_interpolate)
export(new_model_metadata)
export(new_model_response)
export(package_version_finder)
export(page_main_panel)
export(page_subtitle_panel)
export(page_title_panel)
export(plot_cast_point)
export(plot_cast_ts)
export(plot_casts_cov_RMSE)
export(plot_casts_err_lead)
export(portal_data_href)
export(portal_forecast_server)
export(portal_forecast_ui)
export(portal_ndvi_href)
export(portal_project_href)
export(portal_weather_href)
export(portalcast)
export(prefab_dataset_controls)
export(prefab_datasets)
export(prefab_model_controls)
export(prefab_models)
export(prepare_abundance)
export(prepare_covariates)
export(prepare_dataset)
export(prepare_metadata)
export(prepare_newmoons)
export(prepare_rodents)
export(process_model_output)
export(production_settings)
export(profiles_tab)
export(read_cast_metadata)
export(read_cast_tab)
export(read_cast_tabs)
export(read_casts_evaluations)
export(read_casts_metadata)
export(read_climate_forecasts)
export(read_covariates)
export(read_data)
export(read_dataset_controls)
export(read_directory_configuration)
export(read_directory_settings)
export(read_metadata)
export(read_model_cast)
export(read_model_controls)
export(read_model_fit)
export(read_newmoons)
export(read_rodents)
export(read_rodents_table)
export(round_na.interp)
export(run_web_app)
export(runjags_controls)
export(runjags_data)
export(runjags_inits)
export(runjags_model)
export(runjags_monitors)
export(sandbox_settings)
export(select_casts)
export(selected_dataset)
export(selected_historic_end_newmoonnumber)
export(selected_model)
export(selected_newmoonnumber)
export(selected_species)
export(setup_dir)
export(setup_production)
export(setup_sandbox)
export(time_settings)
export(update_dir)
export(update_directory_configuration)
export(update_input)
export(update_list)
export(update_output)
export(update_reactive_values)
export(write_data)
export(write_dataset_controls)
export(write_directory_configuration)
export(write_model_controls)
export(write_model_scripts)
export(write_models_tab_html)
export(write_rodent_profiles_tab_html)
importFrom(RefManageR,Cite)
importFrom(RefManageR,PrintBibliography)
importFrom(RefManageR,ReadBib)
importFrom(arrow,read_csv_arrow)
importFrom(arrow,write_csv_arrow)
importFrom(coda,HPDinterval)
importFrom(coda,as.mcmc)
importFrom(english,english)
importFrom(forecast,Arima)
importFrom(forecast,auto.arima)
importFrom(forecast,ets)
importFrom(forecast,forecast)
importFrom(forecast,na.interp)
importFrom(grDevices,grey)
importFrom(grDevices,rgb)
importFrom(graphics,abline)
importFrom(graphics,axis)
importFrom(graphics,mtext)
importFrom(graphics,par)
importFrom(graphics,plot)
importFrom(graphics,points)
importFrom(graphics,polygon)
importFrom(graphics,rect)
importFrom(graphics,text)
importFrom(htmltools,HTML)
importFrom(htmltools,a)
importFrom(htmltools,br)
importFrom(htmltools,div)
importFrom(htmltools,h2)
importFrom(htmltools,includeHTML)
importFrom(htmltools,includeMarkdown)
importFrom(htmltools,p)
importFrom(htmltools,tags)
importFrom(httr,GET)
importFrom(httr,content)
importFrom(httr,stop_for_status)
importFrom(hypergeo,hypergeo)
importFrom(jsonlite,fromJSON)
importFrom(jsonlite,serializeJSON)
importFrom(jsonlite,unserializeJSON)
importFrom(jsonlite,write_json)
importFrom(knitr,opts_chunk)
importFrom(markdown,mark)
importFrom(portalr,download_observations)
importFrom(portalr,forecasting_species)
importFrom(portalr,get_future_newmoons)
importFrom(portalr,load_datafile)
importFrom(portalr,na_conformer)
importFrom(portalr,ndvi)
importFrom(portalr,return_if_null)
importFrom(portalr,rodent_species)
importFrom(portalr,summarize_rodent_data)
importFrom(portalr,weather)
importFrom(rmarkdown,render)
importFrom(runjags,combine.mcmc)
importFrom(runjags,run.jags)
importFrom(runjags,runjags.options)
importFrom(scoringRules,crps)
importFrom(scoringRules,crps_nbinom)
importFrom(scoringRules,crps_norm)
importFrom(scoringRules,crps_pois)
importFrom(scoringRules,crps_sample)
importFrom(scoringRules,logs)
importFrom(scoringRules,logs_nbinom)
importFrom(scoringRules,logs_norm)
importFrom(scoringRules,logs_pois)
importFrom(scoringRules,logs_sample)
importFrom(shiny,column)
importFrom(shiny,fluidPage)
importFrom(shiny,fluidRow)
importFrom(shiny,mainPanel)
importFrom(shiny,observeEvent)
importFrom(shiny,plotOutput)
importFrom(shiny,reactiveValues)
importFrom(shiny,renderPlot)
importFrom(shiny,renderText)
importFrom(shiny,runApp)
importFrom(shiny,selectInput)
importFrom(shiny,shinyApp)
importFrom(shiny,tabPanel)
importFrom(shiny,tabsetPanel)
importFrom(shiny,textOutput)
importFrom(shiny,titlePanel)
importFrom(shiny,updateSelectInput)
importFrom(stats,AIC)
importFrom(stats,as.ts)
importFrom(stats,filter)
importFrom(stats,frequency)
importFrom(stats,lm)
importFrom(stats,na.omit)
importFrom(stats,predict)
importFrom(stats,qnorm)
importFrom(stats,quantile)
importFrom(stats,rgamma)
importFrom(stats,rnorm)
importFrom(stats,runif)
importFrom(stats,sd)
importFrom(tscount,tsglm)
importFrom(utils,download.file)
importFrom(utils,find)
importFrom(utils,globalVariables)
importFrom(utils,packageDescription)
importFrom(utils,read.csv)
importFrom(utils,sessionInfo)
importFrom(utils,tail)
importFrom(utils,unzip)
importFrom(utils,write.csv)
importFrom(utils,write.table)
importFrom(viridis,viridis)
importFrom(yaml,read_yaml)
importFrom(yaml,write_yaml)
